# coding: utf-8

"""
    Fly Machines API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Dict, List, Optional
from pydantic import BaseModel, Field, StrictStr, conlist

class ApiMachineProcess(BaseModel):
    """
    ApiMachineProcess
    """
    cmd: Optional[conlist(StrictStr)] = None
    entrypoint: Optional[conlist(StrictStr)] = None
    env: Optional[Dict[str, StrictStr]] = None
    var_exec: Optional[conlist(StrictStr)] = Field(None, alias="exec")
    user: Optional[StrictStr] = None
    __properties = ["cmd", "entrypoint", "env", "exec", "user"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> ApiMachineProcess:
        """Create an instance of ApiMachineProcess from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> ApiMachineProcess:
        """Create an instance of ApiMachineProcess from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return ApiMachineProcess.parse_obj(obj)

        _obj = ApiMachineProcess.parse_obj({
            "cmd": obj.get("cmd"),
            "entrypoint": obj.get("entrypoint"),
            "env": obj.get("env"),
            "var_exec": obj.get("exec"),
            "user": obj.get("user")
        })
        return _obj


